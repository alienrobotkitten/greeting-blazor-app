@page "/sentitems"
@using BlazorApp.Entities
@inject StateService stateService
@implements IDisposable

<PageTitle>GreetingService</PageTitle>

@if (GreetingList == null)
{
    <p class="pad-10"><em>Loading...</em></p>
}
else
{
    <FolderView ThisFolder=Folder.Sent
            GreetingList=this.GreetingList />
}

@code {

    public List<Greeting> GreetingList { get; set; }
    private List<Greeting> completeList;

    private HttpClient HttpClient { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        stateService.OnChange += FilterGreetings;

        HttpClient = new();
        HttpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Basic", "a2Fqc2FAYW5rZWJvcmcuY29tOnRlc3Q=");

        await GetPage();
    }
    private void FilterGreetings()
    {
        GreetingList = FilterGreetings(stateService.CurrentUser);
        StateHasChanged();
    }

    private List<Greeting> FilterGreetings(string userName)
    {

        var filteredItems = from g in completeList
                            where g.From == stateService.CurrentUser
                            select g;
        var filteredList = filteredItems.ToList();
        foreach (var g in filteredList)
        {
            if (g.Message.Length > 40)
            {
                g.Preview = $"{g.Message.Substring(0, 38)}...";
            }
            else
            {
                g.Preview = g.Message;
            }
        }
        var comp = new GreetingNewest();
        filteredList.Sort(comp);
        return filteredList;
    }

    private async Task GetPage()
    {
        var result = await HttpClient.GetAsync("https://helenatestdev.azurewebsites.net/api/greeting");
        var resultAsString = await result.Content.ReadAsStringAsync();
        try
        {
            completeList = JsonConvert.DeserializeObject<List<Greeting>>(resultAsString);
            GreetingList = FilterGreetings(stateService.CurrentUser);
        }
        catch (Exception)
        {
            GreetingList = null;
        }
    }

    public void Dispose()
    {
        stateService.OnChange -= FilterGreetings;
    }
}