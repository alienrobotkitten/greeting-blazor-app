@page "/sentitems"
@using BlazorApp.Entities
@inject StateService stateService
@implements IDisposable

<PageTitle>GreetingService</PageTitle>

@if (GreetingList == null)
{
    <p class="pad-10"><em>Loading...</em></p>
}
else
{
    <FolderView ThisFolder=Folder.Sent
            GreetingList=this.GreetingList />
}

@code {

    public List<Greeting> GreetingList { get; set; }

    private HttpClient HttpClient { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        stateService.OnChange += StateHasChanged;

        HttpClient = new();
        HttpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Basic", "a2Fqc2FAYW5rZWJvcmcuY29tOnRlc3Q=");

        await GetPage();
    }

    private async Task GetPage()
    {
        var result = await HttpClient.GetAsync("https://helenatestdev.azurewebsites.net/api/greeting");
        var resultAsString = await result.Content.ReadAsStringAsync();
        var rawList = JsonConvert.DeserializeObject<List<Greeting>>(resultAsString);
        var temp = from g in rawList 
            where g.From == stateService.CurrentUser 
            select g;
        GreetingList = temp.ToList();
        var comp = new GreetingNewest();
        GreetingList.Sort(comp);
    }

    public void Dispose()
    {
        stateService.OnChange -= StateHasChanged;
    }

}